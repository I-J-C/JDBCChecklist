/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package checklist;

//import java.awt.event.ActionEvent;
//import java.awt.event.ActionListener;
import java.sql.*;
import javax.swing.*;
import org.apache.derby.jdbc.*;  //if this is red, right click on this NetBeans project's Library file, add library, select Java DB Driver
import java.util.ArrayList;

/**
 *
 * @author Shiloh Martin-Adam with class instruction content and elements looked up all over the internet.
 */
public class CheckListMain extends javax.swing.JFrame { //implements ActionListener {

    private Connection conn;  //first four lines are for the database
    private ResultSet rs;
    private Statement stmt;
    private String dbConn = "jdbc:derby:contact;create=true";
    String listtracker;  //keeps track of the task lists
    //to manage the combo box of list names, use an array:
    //Reference:  https://www.geeksforgeeks.org/initialize-an-arraylist-in-java/
    ArrayList<String> dropbox = new ArrayList<>();

    /**
     * Creates new form CheckListMain
     */
    public CheckListMain() {
        initComponents();
        setDBDirectory();
        createTable();
        getResultSet();
        //showResults();  called from methods
        manageComboBox();

        pnl2.setVisible(false);  //panel to add/edit tasks hidden at start
        pnl4.setVisible(false);  //panel to delete lists hidden at start
    }

    //based on JDBCContactManager example project:
    private void setDBDirectory() {
        //Decide on the database location
        String userHomeDir = System.getProperty("user.home", ".");
        String systemDir = userHomeDir + "/checklist";
        //set the db system property
        System.setProperty("derby.system.home", systemDir);
    }

    //based on JDBCContactManager example project:
    private void createTable() {
        try {
            DriverManager.registerDriver(new EmbeddedDriver());
            conn = DriverManager.getConnection(dbConn);
            String sql = "create table todolist (completestatus boolean default false, taskitem varchar(200), checklistname varchar(50) not null, duedate varchar(20))";
            stmt = conn.createStatement();
            stmt.execute(sql);
        } catch (SQLException e) {
            if (e.getErrorCode() != 30000) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }

    //based on example from JDBCXML project:
    private void showResults() {  //shows what's in the table
        try {
            tblTaskList.setModel(new ResultSetTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    //based loosely on executeSQL from JDBCXML project:
    private void getResultSet() {
        try {
            stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);  //able to make changes
            rs = stmt.executeQuery("select * from todolist");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    //  Reference:  https://stackoverflow.com/questions/1291704/how-do-i-populate-a-jcombobox-with-an-arraylist
    private void manageComboBox() {  //since we're controlling jComboBox1 with a ArrayList, need to set combobox initial state
        try {
            dropbox.add("Pick a list to edit");
            while (rs.next()) {  //while theres any more list names in the list...
                dropbox.add(rs.getString("checklistname"));  //get the next name on the list
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        //Reference for setmodel:  https://stackoverflow.com/questions/3926543/jcomboboxes-using-setmodel-to-access-objects-in-swing
        jComboBox1.setModel(new DefaultComboBoxModel(dropbox.toArray()));
        //to have jComboBox show the list of list names, select jComboBox1, under properties select model, 
        //custom code, then new javax.swing.DefaultComboBoxModel
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl1 = new javax.swing.JPanel();
        btnNewList = new javax.swing.JButton();
        pnl4 = new javax.swing.JPanel();
        btnDeleteList = new javax.swing.JButton();
        pnl3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaskList = new javax.swing.JTable();
        pnl2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTask = new javax.swing.JTextField();
        btnAddTask = new javax.swing.JButton();
        btnRemoveTask = new javax.swing.JButton();
        btnCompleted = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        pnl5 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Java Task List");

        btnNewList.setText("Create New List");
        btnNewList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNewList, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(btnNewList)
                .addContainerGap())
        );

        btnDeleteList.setText("Delete List");
        btnDeleteList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl4Layout = new javax.swing.GroupLayout(pnl4);
        pnl4.setLayout(pnl4Layout);
        pnl4Layout.setHorizontalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDeleteList, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl4Layout.setVerticalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl4Layout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(btnDeleteList))
        );

        tblTaskList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTaskList);

        javax.swing.GroupLayout pnl3Layout = new javax.swing.GroupLayout(pnl3);
        pnl3.setLayout(pnl3Layout);
        pnl3Layout.setHorizontalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnl3Layout.setVerticalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Enter a Task: ");

        btnAddTask.setText("Add Task");
        btnAddTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTaskActionPerformed(evt);
            }
        });

        btnRemoveTask.setText("Delete Task");
        btnRemoveTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveTaskActionPerformed(evt);
            }
        });

        btnCompleted.setText("Task Completed");
        btnCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletedActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter a Due Date:");

        txtDueDate.setText("MM-DD-YYYY");

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addComponent(btnAddTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoveTask))
                    .addComponent(txtTask)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddTask)
                    .addComponent(btnRemoveTask)
                    .addComponent(btnCompleted)))
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pick a list to add to or edit"}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Pick a List to Edit:");

        javax.swing.GroupLayout pnl5Layout = new javax.swing.GroupLayout(pnl5);
        pnl5.setLayout(pnl5Layout);
        pnl5Layout.setHorizontalGroup(
            pnl5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl5Layout.setVerticalGroup(
            pnl5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(pnl2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pnl1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(pnl5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(pnl5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Action Performed "action" panels based on JXMLConverter.java panels from JDBCXML project
    //and JDBCContactManager project:
    //Reference data used for table:  https://docs.oracle.com/javase/7/docs/api/javax/swing/JTable.html
    //Reference data used for the combo box:  https://docs.oracle.com/javase/7/docs/api/javax/swing/JComboBox.html
    //Reference data used for jOptionPane :  https://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html
    private void btnAddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTaskActionPerformed
        try {  //use updateString instead of SQL "UPDATE table SET column = newvalue WHERE...";
            rs.moveToInsertRow();  //for a table, start at the beginning of the row
            rs.updateBoolean("completestatus", false);  //start with an incomplete task
            rs.updateString("taskitem", txtTask.getText());  //grab the action item text entered by the user
            rs.updateString("checklistname", listtracker);  //grab the pre-existing list name
            rs.updateString("duedate", txtDueDate.getText());  //using string instead of date format, then user can use any date format
            rs.insertRow();  //insert the row you just made
            rs = stmt.executeQuery("select * from todolist where checklistname = '" + listtracker + "'");  //show every row on that todolist
            showResults();
            txtTask.setText(""); //reset the task text field to null
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnAddTaskActionPerformed

    private void btnCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletedActionPerformed
        try {
            int check = JOptionPane.showConfirmDialog(this, "Completed?", "", JOptionPane.YES_NO_OPTION);
            if (check == JOptionPane.YES_OPTION) {
                int rowtracker = tblTaskList.getSelectedRow();
                //Reference:  move to next row of resultset:  https://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html
                rs.absolute(rowtracker + 1);
                rs.updateBoolean("completestatus", true);
                rs.updateRow();  //finish the row update
                //rs.close();  //close the cursor
                rs = stmt.executeQuery("select * from todolist where checklistname = '" + listtracker + "'");
                showResults();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnCompletedActionPerformed

    private void btnRemoveTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveTaskActionPerformed
        try {  //ERROR:  Invalid cursor state, no current row!
            int check = JOptionPane.showConfirmDialog(this, "Delete task?", "", JOptionPane.YES_NO_OPTION);
            if (check == JOptionPane.YES_OPTION) {
                int rowtracker = tblTaskList.getSelectedRow();
                //while(rs.next()){  //NOT THIS!
                //Reference:  move to next row of resultset:  https://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html
                rs.absolute(rowtracker + 1);
                rs.deleteRow();  //deletes the row with the selected task
                rs.close();  //close the cursor
                rs = stmt.executeQuery("select * from todolist where checklistname = '" + listtracker + "'");
                showResults();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnRemoveTaskActionPerformed

    private void btnDeleteListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteListActionPerformed
        //Reference material:  https://www.mkyong.com/swing/java-swing-how-to-make-a-confirmation-dialog/
        try {
            int check = JOptionPane.showConfirmDialog(this, "Delete your list?", "", JOptionPane.YES_NO_OPTION);
            if (check == JOptionPane.YES_OPTION) {
                String listNow = (String) jComboBox1.getSelectedItem();
                rs = stmt.executeQuery("select * from todolist where checklistname = '" + listtracker + "'");  //the SQL query to get the list names
                rs.beforeFirst();  //start at the beginning (we're not inserting, so NOT using movetoinsertrow())
                while (rs.next()) {  //move the cursor forward
                    rs.deleteRow();  //delete the selected list
                }
                jComboBox1.removeItem(listNow);  //Reference:  https://www.w3schools.com/jsref/met_storage_removeitem.asp
                jComboBox1.setSelectedIndex(0);  //Reference:  https://stackoverflow.com/questions/12048864/resetting-the-value-of-a-jcombobox/17871043
                rs.close();  //Reference:  https://stackoverflow.com/questions/4507440/must-jdbc-resultsets-and-statements-be-closed-separately-although-the-connection
                rs = stmt.executeQuery("select * from todolist where checklistname = '" + listtracker + "'");  //query the updated list
                showResults();  //show the updated list
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteListActionPerformed

    private void btnNewListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewListActionPerformed
        try {
            listtracker = JOptionPane.showInputDialog(this, "Enter list name:");  //ask the user for input
            rs = stmt.executeQuery("select * from todolist where checklistname = '" + listtracker + "'");
            jComboBox1.addItem(listtracker);
            jComboBox1.setSelectedItem(listtracker);
            pnl2.setVisible(true);  //so user can edit the list
            pnl4.setVisible(true);  //so user can delete the list
            pack();  //adjust the size of the window
            showResults();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnNewListActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            listtracker = (String) jComboBox1.getSelectedItem();  //grabs the list of lists
            rs = stmt.executeQuery("select * from todolist where checklistname = '" + listtracker + "'");  //this is the SQL query
            pnl2.setVisible(true);  //show the panel for editing tasks
            pnl4.setVisible(true);  //offer the ability to delete the list
            pack(); //adjust the window size
            showResults();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckListMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTask;
    private javax.swing.JButton btnCompleted;
    private javax.swing.JButton btnDeleteList;
    private javax.swing.JButton btnNewList;
    private javax.swing.JButton btnRemoveTask;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JPanel pnl3;
    private javax.swing.JPanel pnl4;
    private javax.swing.JPanel pnl5;
    private javax.swing.JTable tblTaskList;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtTask;
    // End of variables declaration//GEN-END:variables
}
